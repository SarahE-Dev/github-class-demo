name: CI

on:
  push:
    branches: [ main, develop, feature/* ]
  pull_request:
    branches: [ main, develop ]

jobs:
  test:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        python-version: [3.8, 3.9, "3.10", "3.11"]

    steps:
    - uses: actions/checkout@v4

    - name: Set up Python ${{ matrix.python-version }}
      uses: actions/setup-python@v4
      with:
        python-version: ${{ matrix.python-version }}

    - name: Cache pip dependencies
      uses: actions/cache@v3
      with:
        path: ~/.cache/pip
        key: ${{ runner.os }}-pip-${{ hashFiles('**/requirements*.txt') }}
        restore-keys: |
          ${{ runner.os }}-pip-

    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install -r requirements.txt
        pip install -r requirements-dev.txt

    - name: Lint with flake8
      run: |
        # Stop the build if there are Python syntax errors or undefined names
        flake8 . --count --select=E9,F63,F7,F82 --show-source --statistics --exclude=.venv
        # Exit-zero treats all errors as warnings
        flake8 . --count --exit-zero --max-complexity=10 --max-line-length=88 --statistics --exclude=.venv

    - name: Check code formatting with black
      run: |
        black --check --diff . --exclude=.venv

    - name: Check import sorting with isort
      run: |
        isort --check-only --diff . --skip=.venv

    - name: Type checking with mypy
      run: |
        python -m mypy *.py --ignore-missing-imports

    - name: Security check with bandit
      run: |
        bandit -r . -f json -o bandit-report.json --exclude=.venv || true
        cat bandit-report.json

    - name: Test with pytest
      run: |
        # Run the main script to ensure it works
        python tax_calculator.py
        # Add pytest when tests are created
        # pytest --cov=. --cov-report=xml

    - name: Upload coverage to Codecov (when tests are added)
      if: matrix.python-version == '3.10'
      run: |
        echo "Coverage upload would go here when tests are added"

  pre-commit:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v4
    - uses: actions/setup-python@v4
      with:
        python-version: '3.10'
    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install -r requirements.txt
        pip install -r requirements-dev.txt
    - name: Run pre-commit hooks
      run: |
        pre-commit run --all-files

  build-check:
    runs-on: ubuntu-latest
    needs: [test, pre-commit]
    steps:
    - uses: actions/checkout@v4
    - name: Set up Python
      uses: actions/setup-python@v4
      with:
        python-version: '3.10'
    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install -r requirements.txt
    - name: Verify build can run
      run: |
        python tax_calculator.py
        echo "Build verification successful!"
